/* Flags */
{

oauth_client_id: '158501807005.apps.googleusercontent.com',
oauth_client_secret: 'ou47Kn8VWsrExkAeahrCiP1X',
analytics_account: '',

secret: '${secret}',

object_channel_expiration_seconds: 200,

store_server: 'slobserver-1',
num_store_servers: '0',

access_cache_expiration_seconds: 45,

enable_udw: true,
enable_diff_on_open: true,

/* Image file headers are not much more than 50 bytes, this should be plenty */
attachment_header_bytes_upper_bound: 4096,

/* Don't save thumbnails larger than 50K (entity max size is 1MB).
   In practice, they should be around 2-3KB each. */
max_thumbnail_saved_size_bytes: 50000,

/* Client version bumped to 7 because store type strings changed. */
client_version: 7,

/*
  2 weeks = 3600 * 24 * 14
  long time because we don't currently have a mechanism for sending a new token
  to the client without refreshing the entire page.
 */
xsrf_token_expiry_seconds: 1209600,

post_commit_action_interval_millis: 10000,

/* Affinity only lasts for short periods, after which the object will likely
   move, making the cache counter-productive.  However, it is possible that the
   object will be re-assigned to the same instance (especially with very small
   installations that might only have one instance), so we use a long timeout by
   default.

   When >1 backends are in use, a much smaller value (around
   AFFINITY_MAX_EXPIRATION_SECONDS + .5 * AFFINITY_MIN_EXPIRATION_SECONDS) is
   probably better, but I haven't analyzed this. */
/* 2 days = (* 2 24 60 60 1000)
   -- note that frontend clones will probably not live that long anyway */
slob_local_cache_expiration_millis: 172800000,

/* Attempts to preserve history but falls back to synthesis in certain
   error cases. */
import_preserve_history: 'false',

announcement_html: ''

}
